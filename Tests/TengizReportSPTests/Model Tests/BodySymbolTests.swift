//
//  BodySymbolTests.swift
//  TengizReportSPM
//
//  Created by Igor Malyarov on 30.01.2021.
//

import XCTest
@testable import TengizReportSP

extension BodySymbol {
    init(_ string: String) {
        self.init(stringLiteral: string)
    }
}

final class BodySymbolTests: XCTestCase {
    func testBodySymbolExpressibleByStringLiteral() {
        XCTAssertEqual(BodySymbol(""), .empty)
        XCTAssertEqual(BodySymbol("5. Аренда головного офиса\t11.500\t\t\n"), .item(title: "5. Аренда головного офиса", value: 11500.0, comment: nil))
    }

    func testBodySymbolItemCorrection() {
        XCTAssertNil("6.Обслуживание кассовой программы Айко\t16.336".correction())

        XCTAssertEqual("-10.000 за перерасход питание персонала в июле".correction(),
                       .item(title: "Correction", value: -10_000, comment: "-10.000 за перерасход питание персонала в июле"))

        XCTAssertEqual(BodySymbol("-10.000 за перерасход питание персонала в июле"),
                       .item(title: "Correction", value: -10_000, comment: "-10.000 за перерасход питание персонала в июле"))
    }

    func testBodySymbolItemWithPlus() {
        XCTAssertNil("6.Обслуживание кассовой программы Айко\t16.336".withPlus())

        XCTAssertEqual("12.Интернет\t7.701+4.500".withPlus(),
                       .item(title: "12.Интернет", value: 12_201, comment: "7.701+4.500"))
        XCTAssertEqual("1. Аренда торгового помещения\t200.000 (за август) +400.000 (за сентябрь)\t".withPlus(),
                       .item(title: "1. Аренда торгового помещения", value: 600_000, comment: "200.000 (за август) +400.000 (за сентябрь)"))

        XCTAssertEqual(BodySymbol("12.Интернет\t7.701+4.500"),
                       .item(title: "12.Интернет", value: 12_201, comment: "7.701+4.500"))
        XCTAssertEqual(BodySymbol("1. Аренда торгового помещения\t200.000 (за август) +400.000 (за сентябрь)\t"),
                       .item(title: "1. Аренда торгового помещения", value: 600_000, comment: "200.000 (за август) +400.000 (за сентябрь)"))
    }

    func testBodySymbolItemPrihod() {
        let prihods = ReportContent.sampleContents
            .flatMap(\.body)
            .flatMap { $0.components(separatedBy: "\n") }
            .filter { $0.contains("Приход товара по накладным") }
        XCTAssertNil(prihods)

        XCTAssertEqual("1. Приход товара по накладным\t451.198р41к (из них у нас оплачено фактический 21.346р15к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: 21_346.15, comment: "451.198р 41к (из них у нас оплачено фактический 21.346р 15к)"))
        XCTAssertEqual("1. Приход товара по накладным\t922.936р37к (оплаты фактические: 313.570р26к-переводы; 87.091р20к-корпоративная карта; 97.712-наличные из кассы; Итого-498.373р 46к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -498_373.46, comment: "922.936р37к (оплаты фактические: 313.570р26к-переводы; 87.091р20к-корпоративная карта; 97.712-наличные из кассы; Итого-498.373р 46к)"))
        XCTAssertEqual("1. Приход товара по накладным\t 753.950р74к(оплаты фактические: 444.719р 16к -переводы; 75.255р 20к-корпоративная карта; 1.545-наличные из кассы; Итого-521.519р 36к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -521_519.36, comment: "753.950р74к(оплаты фактические: 444.719р 16к -переводы; 75.255р 20к-корпоративная карта; 1.545-наличные из кассы; Итого-521.519р 36к)"))
        XCTAssertEqual("1. Приход товара по накладным\t 946.056р (оплаты фактические: 475.228р 52к -переводы; 157.455р 85к-корпоративная карта; 0-наличные из кассы; Итого-632.684р 37к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -632_684.37, comment: "946.056р (оплаты фактические: 475.228р 52к -переводы; 157.455р 85к-корпоративная карта; 0-наличные из кассы; Итого-632.684р 37к)"))
        XCTAssertEqual("1. Приход товара по накладным\t 907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -628_215.74, comment: "907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)"))
        XCTAssertEqual("1. Приход товара по накладным\t 739.457; (оплаты фактические: 357.254р 17к -переводы; 80.220р 30к-корпоративная карта; 0-наличные из кассы; Итого-437.474р 47к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -437_474.47, comment: "739.457; (оплаты фактические: 357.254р 17к -переводы; 80.220р 30к-корпоративная карта; 0-наличные из кассы; Итого-437.474р 47к)"))
        XCTAssertEqual("1. Приход товара по накладным\t 997.446р; (оплаты фактические: 491.114р 65к -переводы; 114.589р -корпоративная карта; 12.170р -наличные из кассы; Итого-617.873р 65к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -617_873.65, comment: "997.446р; (оплаты фактические: 491.114р 65к -переводы; 114.589р -корпоративная карта; 12.170р -наличные из кассы; Итого-617.873р 65к)"))
        XCTAssertEqual("1. Приход товара по накладным\t179.108р89к+512.293р(оплаты фактические:199.803р80к-переводы;81.225р35к-корпоративная карта;34.202р-наличные из кассы; Итого-315.231р15к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -315_231, comment: "179.108р89к+512.293р(оплаты фактические:199.803р80к-переводы;81.225р35к-корпоративная карта;34.202р-наличные из кассы; Итого-315.231р15к)"))
        XCTAssertEqual("1. Приход товара по накладным\t473.128р43к(оплаты фактические:231.572р46к-переводы;51.104р93к-корпоративная карта;2.799р-наличные из кассы; Итого-285.476р39к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -285_476, comment: "473.128р43к(оплаты фактические:231.572р46к-переводы;51.104р93к-корпоративная карта;2.799р-наличные из кассы; Итого-285.476р39к)"))



        XCTAssertNil("6.Обслуживание кассовой программы Айко\t16.336".prihod())

        XCTAssertEqual("1. Приход товара по накладным\t 907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)\t\t".prihod(),
                       .item(title: "1. Приход товара по накладным", value: -628_215.74, comment: "907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)"))


    }

    func testBodySymbolItemPrepay() {
        //        let prihods = ReportContent.sampleContents
        //            .flatMap(\.body)
        //            .flatMap { $0.components(separatedBy: "\n") }
        //            .filter { $0.contains("Предоплаченный товар") }
        //        XCTAssertNil(prihods)

        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\t15.800\t\t".prepay(),
                       .item(title: "2. Предоплаченный товар, но не отраженный в приходе", value: 15_800, comment: nil))

        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\tБейсболки персонал-18.000; Подушки в зал-22.400; Итого-40.400\t\t".prepay(),
                       .item(title: "2. Предоплаченный товар, но не отраженный в приходе", value: -40400.0, comment: "Бейсболки персонал-18.000; Подушки в зал-22.400; Итого-40.400"))
        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\t КНК Групп-17.300 (плейсметы;ИП Максимов-6.300 (шоколад фирм.,);Итого-23.600\t\t".prepay(),
                       .item(title: "2. Предоплаченный товар, но не отраженный в приходе", value: -23600.0, comment: "КНК Групп-17.300 (плейсметы;ИП Максимов-6.300 (шоколад фирм.,);Итого-23.600"))

        // anotherPrepay
        XCTAssertNil("2. Предоплаченный товар, но не отраженный в приходе\tСтудиопак-12.500 (влажные салфетки);\t\t".prepay())

        // no number => nil
        XCTAssertNil("2. Предоплаченный товар, но не отраженный в приходе\t\t\t".prepay())
        XCTAssertNil("2. Предоплаченный товар, но не отраженный в приходе\t--------------\t\t".prepay())
        XCTAssertNil("2. Предоплаченный товар, но не отраженный в приходе\t--------------\t\t".prepay())
    }

    func testBodySymbolItemAnotherPrepay() {
        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\tСтудиопак-12.500 (влажные салфетки);\t\t".anotherPrepay(),
                       .item(title: "2. Предоплаченный товар, но не отраженный в приходе", value: 12_500, comment: "Студиопак-12.500 (влажные салфетки);"))

    }

    func testBodySymbolItemItogo() {
        XCTAssertNil("6.Обслуживание кассовой программы Айко\t16.336".itogo())

        XCTAssertEqual("1. Приход товара по накладным\t 907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)\t\t".itogo(),
                       .item(title: "1. Приход товара по накладным", value: -628_215.74, comment: "907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)"))

        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\t\t\t\nИТОГ:\t628.215р 74к\t\t".itogo(),
                       .item(title: "", value: 0, comment: ""))
        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\t15.800\t\t".itogo(),
                       .item(title: "", value: 0, comment: ""))
        XCTAssertEqual("2. Предоплаченный товар, но не отраженный в приходе\t15.800\t\t\nИТОГ:\t37.146р15к\t\t".itogo(),
                       .item(title: "", value: 0, comment: ""))


        XCTAssertEqual(BodySymbol("1. Приход товара по накладным\t 907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)\t\t"),
                       .item(title: "1. Приход товара по накладным", value: -628_215.74, comment: "907.841р; (оплаты фактические: 529.875р 50к -переводы; 98.340р 24к-корпоративная карта; 0-наличные из кассы; Итого-628.215р 74к)"))
        XCTAssertEqual(BodySymbol("2. Предоплаченный товар, но не отраженный в приходе\t\t\t\nИТОГ:\t628.215р 74к\t\t"),
                       .item(title: "", value: 0, comment: ""))
    }
}
